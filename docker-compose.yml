version: '3.4'

x-base: &base
  logging:
    driver: 'json-file'
    options:
      max-size: '10m'
      max-file: '5'
  # https://docs.docker.com/compose/compose-file/#restart
  restart: unless-stopped
  # when deployed using docker swarm, cf.: https://docs.docker.com/compose/compose-file/#restart_policy

x-proxy: &proxy
  http_proxy: ${http_proxy}
  https_proxy: ${https_proxy}
  no_proxy: ${no_proxy}

volumes:
  registry_volume:
  quiq_data:
  portainer_data:

services:
  # cf.: https://docs.docker.com/registry/deploying/
  registry:
    <<: *base
    image: registry:2.6.2
    ports: ['5000:5000']
    volumes:
      - registry_volume:/var/lib/registry
      #- ./registry/certs:/certs
    environment:
      REGISTRY_STORAGE_DELETE_ENABLED: 'true'
  # cf.: https://github.com/kwk/docker-registry-frontend/tree/v2
  kk:
    <<: *base
    image: konradkleine/docker-registry-frontend:v2
    ports: ['80:80']
    environment:
      ENV_DOCKER_REGISTRY_HOST: registry
      ENV_DOCKER_REGISTRY_PORT: 5000
      ENV_MODE_BROWSE_ONLY: 'false'
    depends_on: ['registry']

  # cf.: https://github.com/Joxit/docker-registry-ui
  joxit:
    <<: *base
    image: joxit/docker-registry-ui:0.6-static
    ports: ['8080:80']
    environment:
      REGISTRY_URL: http://registry:5000
      DELETE_IMAGES: 'true'
    depends_on: ['registry']

  quiq:
    <<: *base
    image: quiq/docker-registry-ui:0.7.4
    volumes:
      - './quiq/config.yml:/opt/config.yml:ro'
      - 'quiq_data:/opt/data'
    ports: ['8000:8000']
    depends_on: ['registry']

  craneoperator:
    <<: *base
    image: parabuzzle/craneoperator:2.2.5
    ports: ['8081:80']
    environment:
      REGISTRY_HOST: registry
      REGISTRY_PORT: 5000
      REGISTRY_PROTOCOL: http
      SSL_VERIFY: 'false'
      REGISTRY_ALLOW_DELETE: 'true'
    depends_on: ['registry']
